name: "CI"

on:
  pull_request:
    branches: [master]
  push:
    branches: [master]

# Considering that we reached the maximum number of "Apps" on Alchemy, this is a re-used key
# "Sandbox: Ethereum". As for the moment I've taken it, is had no activity
env:
  MAINNET_RPC_URL: "https://eth-mainnet.g.alchemy.com/v2/sgUiV5I9elh_W179HvTyS98e1pOOcQK4"

jobs:
  ci:
    runs-on: "ubuntu-latest"
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v3"

      - name: "Install Node.js"
        uses: "actions/setup-node@v3"
        with:
          node-version: "lts/*"

      - name: "Install the dependencies"
        run: "yarn"

      - name: "Check prettier"
        run: "yarn run prettier:check"

      - name: "Check for presence of .only in tests"
        run: yarn check_dot_only

      - name: "Compile the contracts and generate the TypeChain bindings"
        run: "yarn typechain"

      - name: "Check types"
        run: "yarn tsc --noEmit"

      - name: "Lint code"
        run: "yarn lint"

      #     For some reason, compiled for coverage contracts producing an error:
      #      Error: Transaction reverted: trying to deploy a contract whose code is too large
      #     So disabling coverage until a fix would be found
      #      - name: "Test the contracts and generate the coverage report"
      #        run: "yarn coverage"

      - name: "test with Hardhat"
        run: "yarn test"

      - name: "Install Foundry"
        uses: "foundry-rs/foundry-toolchain@v1"

      # Add any step generating a gas report to a temporary file named gasreport.ansi. For example:
      - name: Run tests
        run: forge test --gas-report > gasreport.ansi # <- this file name should be unique in your repository!
        env:
          # make fuzzing semi-deterministic to avoid noisy gas cost estimation
          # due to non-deterministic fuzzing (but still use pseudo-random fuzzing seeds)
          FOUNDRY_FUZZ_SEED: 0x${{ github.event.pull_request.base.sha || github.sha }}

      - name: Compare gas reports
        uses: Rubilmax/foundry-gas-diff@v3.13.6
        with:
          summaryQuantile: 0.9 # only display the 10% most significant gas diffs in the summary (defaults to 20%)
          sortCriteria: avg,max # sort diff rows by criteria
          sortOrders: desc,asc # and directions
          ignore: test-foundry/**/* # filter out gas reports from specific paths (test/ is included by default)
        id: gas_diff

      - name: Add gas diff to sticky comment
        if: github.event_name == 'pull_request' || github.event_name == 'pull_request_target'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          # delete the comment in case changes no longer impact gas costs
          delete: ${{ !steps.gas_diff.outputs.markdown }}
          message: ${{ steps.gas_diff.outputs.markdown }}
